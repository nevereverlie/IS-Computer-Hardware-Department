<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>